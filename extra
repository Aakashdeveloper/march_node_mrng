https://github.com/Aakashdeveloper
https://github.com/
https://nodejs.org/en/
https://code.visualstudio.com/download

Basic JavaScript
NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Node-Es6(.babel)
Redis  > 6379
MongoDb Basic >27017  (local/cloud)
Api with NodeJS(Rest)
DashBoard(Crud)
Testing
Login/Logout(JWT)
Oauth(with github)
ImageUpload
Oauth(with google)
Github
--Deployment---
Nginx
Pm2
Docker
Heroku
OO_NodeJs
NodeJs with postgres
GraphQl API
Chatapp
Email With Node(sendgird)(https://app.sendgrid.com/)
////////
FIREBASE(0PTIONAL)
--------NOT---------
React/Angular
Html/css/jquery


////////////////////////////
NodeJs

Single Thread
Async
Non Blocking I/O

]]]]]]]]]]]]]]]]]]

NPM > Node Package Manger
> JSON
(JavaScript Object Notation)
Way to represent data
[
    {
        RollNO:1
        name:"John",
        class:"UI"
    },
    {
        RollNO:1
        name:"John",
        class:"UI"
    }
]

package.JSON
> Entry Point to application
> Meta data(name description, version)
> scripts(start,test)
> packages

>>>>>
Step to generate package.JSON
<<<<<<<<
* NodeJs must be install in system
> go inside the folder using terminal/cmd
> type npm init
> answer all questions
> type "yes"

>>>>>
How to install package/dependency/node_modules
<<<<<<<<
> go inside the folder using terminal/cmd
> npm i packagename / npm install packagename 

local dependency
> local to the folder
> use inside same app

Global dependency
> local to the system
> need admin access
> use by any app
> will not add in package.json
> start/build/test

dev dependency
> only need at the time of development
> specific to folder

////Step to install global dependency/////
#window
> open cmd as admin
> npm i -g packagename

#mac/linux
> open terminal
> sudo npm i -g packagename


////////dev dependency//////
> open cmd/terminal
> npm i packagename --save-dev

nodemon> to restart automatically
npm i -g nodemon

///////////////////
Mongodb 
> not a sql

sno | Hindi | English | Computer
 1  | 80    |         |   80
 2  |       | 80      |
 3  | 80    |         |

 [
     {
         sno:1,
         hindi:80,
         Computer:80
     },
     {
         sno:2,
         english:80
     },
     {
         sno:3,
         Hindi:80
     }
 ]

 Terminology

 SQL        MongoDb
 Database   Database
 Tables     Collections
 row        document
 select     find
 insert     insert
 update     update
 delete     remove

 ////
 Setup  Mongo Offline
 ////////
 https://www.mongodb.com/try/download/community

 #window
 > in C\ make folder by the name of data  (c:\data)
 > in data folder make folder by the name of db (c:\data\db)

 > open cmd
 > go inside (c:\programmfile\mongodb\4.4\server\bin)
 > mongod (27017)

 > open new cmd
 > go inside (c:\programmfile\mongodb\4.4\server\bin)
 > mongo 

#mac/linux
> on terminal root path root ~ make folder data\db
> on terminal root path type mongod(27017)
> on in terminal type mongo


/////////
setup online
//////
https://www.mongodb.com/cloud/atlas
0.0.0.0/0

npm i @babel/core @babel/register @babel/preset-env

////Redis
https://github.com/dmajkic/redis/downloads
redis-server (6379)
redis-cli

KEYS *
set key value
get key

set test "hiii"
get test

https://www.mongodb.com/cloud/atlas

> Create New cluster
> M0 sandbox
> Create Cluster
> Database access
    > Add New Db user
        > User/Password
            (avoid special char $ @)
        > Atlas Admin
> Network access
    > Add Ip Address
    > 0.0.0.0/0


    npm i express cors ejs mongodb body-parser chai chai-http mocha

npm i bcryptjs mongoose body-parser cors express jsonwebtoken

> see all user
> register User
> login user
> user profile

/////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://docs.github.com/en/developers/apps/authorizing-oauth-apps
http://www.passportjs.org/docs/google/


git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/nodeprod.git
git push -u origin master

git add .
git commit -m "first commit"
git push

git pull

git clone url
 
///////////
npm i -g pm2
pm2 status
pm2 start filename
pm2 stop filename 

npm i express mongodb @babel/core @babel/preset-env @babel/register

npm i axios express express-graphql graphql

npm i -g json-server
json-server --watch db.json --port 8900

// 13 april
https://us02web.zoom.us/j/5588867882?pwd=TEtYR2czVUovV2t5ekFPWHZBdlo0Zz09